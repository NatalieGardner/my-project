{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"My Digital Literacy Narrative Over the course of the semester, I have expanded my digital literacy in WRIT 4662W Writing with Digital Technologies. This site will serve to provide a narrative of my digital literacy development. Much like Kyle D. Stedman stated in the article What are New Literacies , before this course I thought of digital literacy in terms of something I am lacking and something that I need to improve. I did not often take the time to reflect on where I started and what I have accomplished. This course has taught me to think about digital literacy in terms of discovering new knowledge. Instead of thinking about all the things I do not know with a negative mindset, now I think about the exciting possibilities of engaging with new technologies. My digital literacy journey has been influenced by peers, friends, family, instructors, and mentors. It has been sculpted by educational computer games and online tutorials. I have read books and watched films that illustrate and analyze the history of computers and the internet which has given me a broader perspective on computer science. I have taken courses that taught me how to code in HTML and use Adobe Creative Suite. While I am not a coding guru, I am always learning. Developing my digital literacy to this point has given me the foundation necessary to continue learning in WRIT 4662W. I have learned a lot in this course and will continue learning how to better write for digital spaces and create interactive content that is informative and engaging. View my Digital Literacy Narrative v.1 here .","title":"Home"},{"location":"#my-digital-literacy-narrative","text":"Over the course of the semester, I have expanded my digital literacy in WRIT 4662W Writing with Digital Technologies. This site will serve to provide a narrative of my digital literacy development. Much like Kyle D. Stedman stated in the article What are New Literacies , before this course I thought of digital literacy in terms of something I am lacking and something that I need to improve. I did not often take the time to reflect on where I started and what I have accomplished. This course has taught me to think about digital literacy in terms of discovering new knowledge. Instead of thinking about all the things I do not know with a negative mindset, now I think about the exciting possibilities of engaging with new technologies. My digital literacy journey has been influenced by peers, friends, family, instructors, and mentors. It has been sculpted by educational computer games and online tutorials. I have read books and watched films that illustrate and analyze the history of computers and the internet which has given me a broader perspective on computer science. I have taken courses that taught me how to code in HTML and use Adobe Creative Suite. While I am not a coding guru, I am always learning. Developing my digital literacy to this point has given me the foundation necessary to continue learning in WRIT 4662W. I have learned a lot in this course and will continue learning how to better write for digital spaces and create interactive content that is informative and engaging. View my Digital Literacy Narrative v.1 here .","title":"My Digital Literacy Narrative"},{"location":"Client%20Project/","text":"Client Project The Client Project provided a very valuable opportunity to practice the professionalism required to work in a team to produce quality deliverables for a client. I learned how to conduct audience and needs analyses to determine the project requirements and form a realistic workplan. This assignment also allowed me to gain some experience with creating high fidelity wireframes and prototypes with Figma. See the prototype my team created for the MN Austin Healey Club website here . One resource I found to be useful for thinking about writing content for digital spaces is Janice Redish\u2019s Letting Go of the Words . She stated, \u201cpeople come for information that answers their questions or helps them complete their task. They want that information to be easy to find, easy to understand, accurate, up to date, and credible\u201d (Redish). The most important information should be in a prominent position at the top of the page, not buried in text. Digital content should be visually pleasing and uncluttered. There should be enough white space on the page that it is not overwhelming. For the client assignment, this meant we had to prioritize information and organize it in a way that answers the questions the audience needs answered. People visiting the MN Austin Healey Club website are looking for information about the MN Austin Healey Club, upcoming events, meeting place, the club roster and officers, how to become a member, and where to get parts. Therefore, the content has to be organized to highlight these pieces of information in a way that is easily accessible and readable so the users can find the information they need. Overall, this module shifted my perspective about writing for the web. When thinking about creating digital content, I will now advocate for the user and their needs and work to make the content organized in a way that is best for the situation and audience.","title":"Client Project"},{"location":"Client%20Project/#client-project","text":"The Client Project provided a very valuable opportunity to practice the professionalism required to work in a team to produce quality deliverables for a client. I learned how to conduct audience and needs analyses to determine the project requirements and form a realistic workplan. This assignment also allowed me to gain some experience with creating high fidelity wireframes and prototypes with Figma. See the prototype my team created for the MN Austin Healey Club website here . One resource I found to be useful for thinking about writing content for digital spaces is Janice Redish\u2019s Letting Go of the Words . She stated, \u201cpeople come for information that answers their questions or helps them complete their task. They want that information to be easy to find, easy to understand, accurate, up to date, and credible\u201d (Redish). The most important information should be in a prominent position at the top of the page, not buried in text. Digital content should be visually pleasing and uncluttered. There should be enough white space on the page that it is not overwhelming. For the client assignment, this meant we had to prioritize information and organize it in a way that answers the questions the audience needs answered. People visiting the MN Austin Healey Club website are looking for information about the MN Austin Healey Club, upcoming events, meeting place, the club roster and officers, how to become a member, and where to get parts. Therefore, the content has to be organized to highlight these pieces of information in a way that is easily accessible and readable so the users can find the information they need. Overall, this module shifted my perspective about writing for the web. When thinking about creating digital content, I will now advocate for the user and their needs and work to make the content organized in a way that is best for the situation and audience.","title":"Client Project"},{"location":"Contact/","text":"Contact Me Email: gardn654@umn.edu LinkedIn","title":"Contact"},{"location":"Contact/#contact-me","text":"","title":"Contact Me"},{"location":"Contact/#email-gardn654umnedu","text":"","title":"Email: gardn654@umn.edu"},{"location":"Contact/#linkedin","text":"","title":"LinkedIn"},{"location":"DITA%20XML/","text":"DITA XML and Oxygen In WRIT 4662W, I learned about DITA XML and tested my knowledge by creating content via Oxygen XML Editor. Before this course I had heard of DITA, but I did not know exactly what it was. I learned that DITA stands for Darwin Information Typing Architecture and is a way to standardize rules for XML tags and elements. DITA is useful for organizing and maintaining large bodies of content because DITA can separate content into sections using tags. These tags can be used in multiple documents and can be updated efficiently. By changing the section in one document, it will update everywhere it is linked. By utilizing DITA, writers can also contribute to sections without affecting the whole document. This way, sections can easily be edited, organized, and maintained. I created content utilizing structured authoring/DITA XML using Oxygen XML Editor. I chose to create an instructional document about how to select an artificial Christmas tree. I organized the content into the sections, or topics, based on tasks like \"choosing your tree type\" and \"determining your tree size\". I also created a reference topic titled \"artificial tree descriptions\" and a concept topic titled \"why choose an artificial Christmas tree?\". During this process I made sure to include all pertinent information so that the topic was complete, but not so much information that it could be separated into another topic. I then wrote rough draft of the content began creating my DITA files in Oxygen. After I completed the files, I created a DITA map to link the content together. After performing transformations on the content, I was able to create two deliverables: a PDF and a WebHelpResponsive document. In this module I learned about the concept of DITA XML and how it is utilized by technical writers to maintain large bodies of content as well as how to create content with DITA XML using Oxygen software. I learned about, and engaged in, topic-based writing to create content that is easier for technical communicators to maintain, update and reorganize, and easier for the audience to use.","title":"DITA"},{"location":"DITA%20XML/#dita-xml-and-oxygen","text":"In WRIT 4662W, I learned about DITA XML and tested my knowledge by creating content via Oxygen XML Editor. Before this course I had heard of DITA, but I did not know exactly what it was. I learned that DITA stands for Darwin Information Typing Architecture and is a way to standardize rules for XML tags and elements. DITA is useful for organizing and maintaining large bodies of content because DITA can separate content into sections using tags. These tags can be used in multiple documents and can be updated efficiently. By changing the section in one document, it will update everywhere it is linked. By utilizing DITA, writers can also contribute to sections without affecting the whole document. This way, sections can easily be edited, organized, and maintained. I created content utilizing structured authoring/DITA XML using Oxygen XML Editor. I chose to create an instructional document about how to select an artificial Christmas tree. I organized the content into the sections, or topics, based on tasks like \"choosing your tree type\" and \"determining your tree size\". I also created a reference topic titled \"artificial tree descriptions\" and a concept topic titled \"why choose an artificial Christmas tree?\". During this process I made sure to include all pertinent information so that the topic was complete, but not so much information that it could be separated into another topic. I then wrote rough draft of the content began creating my DITA files in Oxygen. After I completed the files, I created a DITA map to link the content together. After performing transformations on the content, I was able to create two deliverables: a PDF and a WebHelpResponsive document. In this module I learned about the concept of DITA XML and how it is utilized by technical writers to maintain large bodies of content as well as how to create content with DITA XML using Oxygen software. I learned about, and engaged in, topic-based writing to create content that is easier for technical communicators to maintain, update and reorganize, and easier for the audience to use.","title":"DITA XML and Oxygen"},{"location":"Git%20%26%20Github/","text":"Git and Github Before this course, I had never heard of Git or GitHub. From this module I learned that Git is an open-source distributed version control system (DVCS) that allows developers to collaborate on code. Git also allows developers to track changes between versions of code. GitHub is a hosting service that allows developers to store live samples of their code. GitHub pages is a static site hosting service that allows developers to publish their sites. I learned that open source code fosters active collaboration that can greatly improve code in a short amount of time. For example, if one person publicly shares their code, another person can clone the repository, fork it and make improvements. Another person can do the same and so on, each contributing their own improvements. By working together from the other developers\u2019 code, better solutions can be produced and more advancements can be made more quickly. Git and GitHub are becoming increasingly important in the workflow of technical writers. Therefore, it is important to understand the basics of Git and GitHub and the functionalities it allows technical communicators. I feel that it is important to have at least a basic understanding of version control so that I am able to revise content and track changes within content management systems. During this module I learned how to create a GitHub repository to store my code from the static site v.1 assignment. I learned how to track any changes made to the repository with pull requests and was able to publish my static site. I hope to continue to expand on these skills as I feel they will become very valuable in the workflow of technical writers. View my Static Site v.1 here .","title":"Git & Github"},{"location":"Git%20%26%20Github/#git-and-github","text":"Before this course, I had never heard of Git or GitHub. From this module I learned that Git is an open-source distributed version control system (DVCS) that allows developers to collaborate on code. Git also allows developers to track changes between versions of code. GitHub is a hosting service that allows developers to store live samples of their code. GitHub pages is a static site hosting service that allows developers to publish their sites. I learned that open source code fosters active collaboration that can greatly improve code in a short amount of time. For example, if one person publicly shares their code, another person can clone the repository, fork it and make improvements. Another person can do the same and so on, each contributing their own improvements. By working together from the other developers\u2019 code, better solutions can be produced and more advancements can be made more quickly. Git and GitHub are becoming increasingly important in the workflow of technical writers. Therefore, it is important to understand the basics of Git and GitHub and the functionalities it allows technical communicators. I feel that it is important to have at least a basic understanding of version control so that I am able to revise content and track changes within content management systems. During this module I learned how to create a GitHub repository to store my code from the static site v.1 assignment. I learned how to track any changes made to the repository with pull requests and was able to publish my static site. I hope to continue to expand on these skills as I feel they will become very valuable in the workflow of technical writers. View my Static Site v.1 here .","title":"Git and Github"},{"location":"HTML%20%26%20CSS/","text":"HTML and CSS The first assignment Static Site v.1 deepened my knowledge of HTML and CSS. Before this course I had a basic understanding of HTML and CSS from a course I took at the University of Wisconsin \u2013 Green Bay called Introduction to Computing and Internet Technologies. In this course, I expanded my skills to focus on the aesthetic elements of a webpage like color, font, and layout. In the first version of my static site I was able to create two columns with a grey background with a darker grey column of text on the left side of the page. I learned how to create a band of color (olive green) at the top of the page and tied that color in with a line under the heading \u201cAbout Me\u201d. I also learned how to code a scrolling footer that stays at the bottom of the screen no matter where the user is on the page. While I still do not think I could achieve the same level of visual professionalism as a platform like Wix or WordPress, it is great to be able to create something completely customized. If nothing else, what I cannot create I can understand. After this course, I can understand and \u201cread\u201d CSS and HTML files which will be very useful in the future as a pursue a career in technical writing. By reading Rhetorical Web Design by Jason Tham, I learned that many programmers/developers today rely heavily on convenient prefabricated website templates and subsequently do not cultivate coding skills. Tham argues that templates do not allow the programmer to customize the website layout to the audience and rhetorical situation. He states if people become too reliant on WYSIWYG content editors, they can be distracted from the needs of their audience and the cultural and contextual factors that influence them. This creates a divide between the developer/designer and the audience which furthers the \u201cpower imbalance between expert developers and everyday web users\u201d (Tham 8). I agree with Tham\u2019s argument. While it is very convenient to use WYSIWYG content editors like WordPress and Wix, they do not offer as much customization as coding a website yourself. Building a website from scratch allows the programmer to think about placement of certain elements, structure, color scheme, etc. in relation to the audience and rhetorical situation. If developers rely too heavily on prefabricated templates, they are not customizing the website to the cultural, social, and even economic and political expectations of the audience. By relying on content editors, they are not using rhetoric to dictate design and meet the needs of their target audience. Overall, this course inspired me to continue improving my understanding of HTML and CSS so that I can create content that is tailored to the rhetorical situation and the needs of the audience. View my Static Site v.1 here .","title":"HTML & CSS"},{"location":"HTML%20%26%20CSS/#html-and-css","text":"The first assignment Static Site v.1 deepened my knowledge of HTML and CSS. Before this course I had a basic understanding of HTML and CSS from a course I took at the University of Wisconsin \u2013 Green Bay called Introduction to Computing and Internet Technologies. In this course, I expanded my skills to focus on the aesthetic elements of a webpage like color, font, and layout. In the first version of my static site I was able to create two columns with a grey background with a darker grey column of text on the left side of the page. I learned how to create a band of color (olive green) at the top of the page and tied that color in with a line under the heading \u201cAbout Me\u201d. I also learned how to code a scrolling footer that stays at the bottom of the screen no matter where the user is on the page. While I still do not think I could achieve the same level of visual professionalism as a platform like Wix or WordPress, it is great to be able to create something completely customized. If nothing else, what I cannot create I can understand. After this course, I can understand and \u201cread\u201d CSS and HTML files which will be very useful in the future as a pursue a career in technical writing. By reading Rhetorical Web Design by Jason Tham, I learned that many programmers/developers today rely heavily on convenient prefabricated website templates and subsequently do not cultivate coding skills. Tham argues that templates do not allow the programmer to customize the website layout to the audience and rhetorical situation. He states if people become too reliant on WYSIWYG content editors, they can be distracted from the needs of their audience and the cultural and contextual factors that influence them. This creates a divide between the developer/designer and the audience which furthers the \u201cpower imbalance between expert developers and everyday web users\u201d (Tham 8). I agree with Tham\u2019s argument. While it is very convenient to use WYSIWYG content editors like WordPress and Wix, they do not offer as much customization as coding a website yourself. Building a website from scratch allows the programmer to think about placement of certain elements, structure, color scheme, etc. in relation to the audience and rhetorical situation. If developers rely too heavily on prefabricated templates, they are not customizing the website to the cultural, social, and even economic and political expectations of the audience. By relying on content editors, they are not using rhetoric to dictate design and meet the needs of their target audience. Overall, this course inspired me to continue improving my understanding of HTML and CSS so that I can create content that is tailored to the rhetorical situation and the needs of the audience. View my Static Site v.1 here .","title":"HTML and CSS"},{"location":"Markdown/","text":"Markdown and Static Site Generators Before this course, I had not heard of markdown and was slightly intimidated about learning what I thought would be another complex computer language. However, markdown is surprisingly intuitive and easy to understand. The markdown module taught me about a convenient, intuitive way to create webpages. By creating markdown pages and converting them to HTML via a static site generator (SSG), I learned how to efficiently create a functional static website. I had also not heard of SSGs before taking WRIT 4662W. I did not know that you could upload pages in markdown and have them automatically convert to HTML. Over the course of this class, I have learned that while building a website from scratch with HTML and CSS allows the most customization, it can be daunting for someone with little experience. I also learned that while content management systems (CMSs) like WordPress or Wix are much more convenient, they do not provide the level of customization that is often desired by developers. SSGs, then, are a compromise between ease and customization. When beginning to engage with MkDocs for this assignment, Static Site v.2, I was a little confused about how to access the command line and perform the proper commands. The MkDocs \u201cGetting Started\u201d tutorial was not very helpful to me because it illustrated the steps on a PC and I was using a Mac. However, after searching for the proper commands on a Mac, I was able to download and install MkDocs and perform the serve command to track the changes in my browser without any issues. I found the process of creating more markdown files in my project folder and linking them in the yml document to create more pages on my site to be very intuitive. This assignment, allowed me to overcome my apprehension of the command line and create a simple, functional site efficiently through the SSG MkDocs and markdown. These skills will serve me in the future if I wish to use MkDocs to create and maintain a portfolio. I may also use them in my career as I enter the field of technical writing.","title":"Markdown & SSGs"},{"location":"Markdown/#markdown-and-static-site-generators","text":"Before this course, I had not heard of markdown and was slightly intimidated about learning what I thought would be another complex computer language. However, markdown is surprisingly intuitive and easy to understand. The markdown module taught me about a convenient, intuitive way to create webpages. By creating markdown pages and converting them to HTML via a static site generator (SSG), I learned how to efficiently create a functional static website. I had also not heard of SSGs before taking WRIT 4662W. I did not know that you could upload pages in markdown and have them automatically convert to HTML. Over the course of this class, I have learned that while building a website from scratch with HTML and CSS allows the most customization, it can be daunting for someone with little experience. I also learned that while content management systems (CMSs) like WordPress or Wix are much more convenient, they do not provide the level of customization that is often desired by developers. SSGs, then, are a compromise between ease and customization. When beginning to engage with MkDocs for this assignment, Static Site v.2, I was a little confused about how to access the command line and perform the proper commands. The MkDocs \u201cGetting Started\u201d tutorial was not very helpful to me because it illustrated the steps on a PC and I was using a Mac. However, after searching for the proper commands on a Mac, I was able to download and install MkDocs and perform the serve command to track the changes in my browser without any issues. I found the process of creating more markdown files in my project folder and linking them in the yml document to create more pages on my site to be very intuitive. This assignment, allowed me to overcome my apprehension of the command line and create a simple, functional site efficiently through the SSG MkDocs and markdown. These skills will serve me in the future if I wish to use MkDocs to create and maintain a portfolio. I may also use them in my career as I enter the field of technical writing.","title":"Markdown and Static Site Generators"}]}